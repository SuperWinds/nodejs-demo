var fs = require('fs');
var csv = require('csv');

module.exports = CSV_json;

function CSV_json (config, callback) {
	if(!config.input) {
		console.error("You have to have an input file");
		process.exit(1);
	}

	var csv_cj = new CSVcv(config, callback);
}

CSVcv = function(config, callback) {
	this.cvjson(config, callback);
}

CSVcv.prototype.cvjson = function(config, callback) {
	var header = []
	, record = [];
	
	csv()
	.from.path(config.input, { delimiter: ',', escape: '"' })
	//.to.stream(fs.createWriteStream(config.output))
	.transform( function(row){
		row.unshift(row.pop());
		return row;
	})
	.on('record', function(row, index){
		
		if(index === 0) {
			header = row;
		}else{
			var obj = {};
			header.forEach(function(column, index) {
				obj[column] = row[index];
			})
			record.push(obj);
		}
	})
	.on('end', function(count){
		// when writing to a file, use the 'close' event
		// the 'end' event may fire before the file has been written
		if(config.output !== null) {
			var stream = fs.createWriteStream(config.output, { flags : 'w' });
			stream.write(JSON.stringify(record));
			callback(null, record);
		} else {
			callback(null, record);
		}

	})
	.on('error', function(error){
		callback(error);
		console.log(error.message);
	});
}
